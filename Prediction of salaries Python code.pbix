
# Predection of employee salaies Python code used for powerbi
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
import joblib

# Step 1: Load Data
df = pd.read_csv('hr_dataset.csv')  

# Step 2: Basic Preprocessing

df = df.dropna()

# Encode categorical variables
label_encoders = {}
categorical_cols = ['department', 'salary']  
for col in categorical_cols:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le

# Step 3: Feature and Target Selection
X = df.drop('salary', axis=1)  
y = df['salary']

# Optional: Scale features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 4: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Step 5: Train Model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 6: Evaluate Model
y_pred = model.predict(X_test)
print("Model Performance:")
print(classification_report(y_test, y_pred))

# Step 7: Save Predictions
df['predicted_salary'] = model.predict(X_scaled)
df.to_csv('predicted_salary_output.csv', index=False)
print("Predictions saved to predicted_salary_output.csv")

# Step 8: Save Model (optional)
joblib.dump(model, 'salary_model.pkl')
joblib.dump(scaler, 'scaler.pkl')
